mvn -version  - для успешного запуска автотестов в ответе должен быть указан jdk http://prntscr.com/VUrG5hHVkPzB

Запуск всех тестов
mvn clean test

Запуск класса
mvn clean -Dtest=RegressionSuite test

mvn package
Описание: Инструмент упаковки проекта сгенерирует файлы jar или war в целевом каталоге модуля. Результаты будут следующими. http://prntscr.com/b0fZ28DXD080

mvn test
Описание: Тестовая команда или выполнение тестового примера junit в src / test / java /.  http://prntscr.com/9YeLOu6VexvP

mvn install
Описание: Команда установки модуля Скопируйте упакованный файл jar / war на локальный склад для использования другими модулями -Dmaven.test.skip = true Пропустить тест (тестовая компиляция также будет пропущена)
http://prntscr.com/jAvXoVlseiDy
Первое красное поле - это его входной путь, который также является путем к локальному складу.
Это следующие файлы:
http://prntscr.com/DzvpEnR0UJNU

mvn deploy
Примечание. Команда Release освобождает упакованный файл для удаленного доступа и предоставляет другому персоналу возможность загрузить зависимости. Как правило, он передается на частный сервер компании. Я не настраивал здесь частный сервер, поэтому не буду его демонстрировать

Отчет сайта Maven

mvn project-info-reports:dependencies
Создавать отчеты, от которых зависит проект

mvn dependency:resolve
Просмотреть зависимости

mvn dependency:tree
Распечатать все дерево зависимостей проекта

mvn dependency:analyze
Хороший помощник, который поможет вам проанализировать зависимости, удалить бесполезные и повторяющиеся зависимости

mvn install -X
Проследите полную траекторию зависимостей

Жизненный цикл
resource->compile->process-classes->process-test-resources->test-compile->test->prepare-package->package
ресурсы: ресурсы связаны на этапе обработки ресурсов, используются для копирования файлов в src / main / resources или любом другом указанном каталоге в выходной каталог
ресурсы: testResources Скопируйте тестируемый каталог ресурсов или любой другой указанный каталог в выходной каталог теста.
компилятор: testCompile компилирует тестовый класс (включая копирование файлов ресурсов)
surefire: тестовый запуск тестовых случаев
jar: jar jar package

ERROR:
Connected to the target VM, address: '127.0.0.1:64722', transport: 'socket'
Exception in thread "main" java.lang.ClassCircularityError: java/lang/WeakPairMap$Pair$Weak
FIX:
Please try to disable the async stack traces agent in "Settings | Build, Execution, Deployment | Debugger | Async Stack Traces"
